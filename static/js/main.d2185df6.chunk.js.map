{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","onClick","togglemode","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","backgroundColor","value","onChange","event","target","rows","handleupclick","toUpperCase","showalert","handledownclick","toLowerCase","handleClear","handlecapitalize","capitalized","split","map","word","charAt","slice","join","handleCopy","navigator","clipboard","writeText","handleextraspace","newText","trim","length","Alert","alert","role","msg","data-dismiss","aria-hidden","App","setMode","setalert","message","setTimeout","document","body","title","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d2185df6.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <a className=\"navbar-brand\" href=\"\">Navbar</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"\">About Us</a>\r\n      </li>\r\n      {/* <li className=\"nav-item dropdown\">\r\n        <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <div className=\"dropdown-menu\">\r\n          <a className=\"dropdown-item\" href=\"/\">Action</a>\r\n          <a className=\"dropdown-item\" href=\"/\">Another action</a>\r\n          <div className=\"dropdown-divider\"></div>\r\n          <a className=\"dropdown-item\" href=\"/\">Something else here</a>\r\n        </div>\r\n      </li> */}\r\n      <li className=\"nav-item\">\r\n        {/* <a className=\"nav-link disabled\">Disabled</a> */}\r\n      </li>\r\n    </ul>\r\n\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n      <button className=\"btn btn-outline-success my-2 my-sm-0 m-2\" type=\"submit\">Search</button>\r\n    </form>\r\n\r\n<div className={`custom-control custom-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input type=\"checkbox\" className=\"custom-control-input\" onClick={props.togglemode} id=\"customSwitch1\"/>\r\n  <label className=\"custom-control-label m-1\" htmlFor=\"customSwitch1\">Enable Dark Mode</label>\r\n</div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleupclick = ()=>{\r\n        setText(text.toUpperCase());\r\n        props.showalert(\"Converted to UpperCase\",\"Success\");\r\n    }\r\n\r\n    const handledownclick = ()=>{\r\n        setText(text.toLowerCase());\r\n        props.showalert(\"Converted to LowerCase\",\"Success\");\r\n    }\r\n\r\n    const handleClear = ()=>{\r\n        setText('');\r\n        props.showalert(\"Text Clear\",\"Success\");\r\n    }\r\n\r\n    const handleonChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handlecapitalize = ()=>{\r\n        const capitalized = text\r\n        .split(' ')\r\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n        .join(' ');\r\n        setText(capitalized)\r\n        props.showalert(\"Every word Capitalized\",\"Success\");\r\n    }\r\n\r\n    const handleCopy = () => {\r\n      navigator.clipboard.writeText(text);\r\n      props.showalert(\"Text copied to clipboard\",\"Success\");\r\n    }\r\n\r\n    const handleextraspace =()=> {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showalert(\"Extra Spaces Removed\",\"Success\");\r\n    }\r\n\r\n    const[text,setText] = useState('');\r\n  return (\r\n        <>\r\n      <div style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n       <div className=\"form-group\">\r\n    <textarea className=\"form-control\" style={{backgroundColor: props.mode==='dark'?'#042743':'white',color: props.mode==='dark'?'white':'#042743'}} value={text} onChange={handleonChange} id=\"Mybox\" rows=\"8\"></textarea>\r\n  </div>\r\n    <button className=\"btn btn-primary\" onClick={handleupclick}>Convert to Uppercase</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handledownclick}>Convert to Lowercase</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handleClear}>Clear Text</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handlecapitalize}>Capitalize Every Word</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>Copy Text</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={handleextraspace}>Handle Extra Spaces</button>\r\n    </div> \r\n    <div className=\"conatiner\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <h3> {text===\"\" ? \"Number of words = \"+ 0 : \"Number of words = \" + text.trim().split(\" \").length}</h3>\r\n        <h3>Number of Characters = {text.length}</h3>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  const lowercase = (word)=>{\r\n    const words = word.toLowerCase();\r\n    return words\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${lowercase(props.alert.type)} alert-dismissible fade show`} role=\"alert\">\r\n      <strong> {props.alert.type} </strong>{props.alert.msg}\r\n      <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg';\nimport React , { useState } from 'react';\nimport './App.css';\n// import AboutUs from './components/AboutUs';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert,setalert] = useState(null);\n\n  const showalert =(message, type)=>{\n    setalert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  const togglemode =()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743' \n      showalert(\"Dark mode has been enabled\",\"Success\")\n      document.title = \"Text-Tranform/Dark Mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showalert(\"Light mode has been enabled\",\"Success\")\n      document.title = \"Text-Tranform/Light Mode\"\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n    <Navbar mode={mode} togglemode={togglemode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n        {/* <Switch>\n          <Route exact path=\"/aboutus\"> */}\n            {/* <AboutUs/> */}\n          {/* </Route>\n          <Route exact path=\"/\"> */}\n    <TextForm heading=\"Enter Text\" mode={mode} showalert={showalert}/>\n          {/* </Route>\n        </Switch> */}\n    </div>\n    {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}